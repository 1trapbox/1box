# xray_nginx_config_UDS
# 更新时间: 2023-12-26
# 更新时间:2023-12-26
# 参考1:https://github.com/lxhao61/integrated-examples/blob/main/Xray(M%2BF%2BB%2BG%2BA)%2BNginx/1_nginx.confx
# 参考2:https://cnix.win/87.html
# UDS没有权限记得赋予
# sudo chown -R nobody:nobody /dev/shm
# sudo chmod -R 755 /dev/shm
unix:/dev/shm/vless.sock;

error_log /opt/nginx/logs/xray_nginx_error.log;

    map $ssl_preread_server_name $backend_name {
        vl.x.com        vless;        # zv.xx.yy 为对应 vless-xtls-rprx-vision 的域名，修改为自己的。
        r.x.com         reality;      # 对应 VLESS+Vision+REALITY 的域名，修改为自己的。
        t.x.com         trojan;       # 对应 Trojan+TCP+TLS 的域名，修改为自己的。
        h2.x.com        http2;        # 对应 HTTP/2 server 的域名，修改为自己的。
    }
    upstream vless {
        server unix:/dev/shm/vless.sock;        #转给 vless+tls+xtls-rprx-vision 本地监听端口
    }
    upstream reality {
        server unix:/dev/shm/reality.sock;      #转给 trojan 本地监听端口
    }
    upstream trojan {
        server unix:/dev/shm/trojan.sock;       #转给 trojan 本地监听端口
    }
    upstream http2 {
        server unix:/dev/shm/http2.sock;        #转给 HTTP/2 本地监听端口
    }
    server {
        listen 443;
        listen [::]:443; #无 IPv6，此项可删除。
        ssl_preread on;
        proxy_pass $backend_name;
        proxy_protocol on; #启用 PROXY protocol 发送（全局模式）
    }
}

http {
    include       default/mime.types;
    default_type  application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /opt/nginx/logs/xray_nginx_access.log main;
    sendfile on;
    keepalive_timeout 65;

    # HTTP 301 HTTPS server block
    server {
        listen 80;
        listen [::]:80; #无 IPv6，此项可删除。
        return 301 https://$host$request_uri;
    }

    # HTTP/2 server block
    server {
        listen unix:/dev/shm/http2.sock ssl proxy_protocol;
        http2 on;
        set_real_ip_from unix:;
        real_ip_header proxy_protocol;

        ssl_certificate     /.cer;
        ssl_certificate_key /.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on; #优先使用服务端的密码套件
        ssl_ciphers TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # 强制HSTS

        location / {
            root html;
            index index.html 50x.html;
        }

        location /vlgrpc { #与 vless+gRPC 应用中 serviceName 对应
            if ($request_method != "POST") {
                return 404;
            }
            client_body_buffer_size 1m;
            client_body_timeout 1h;
            client_max_body_size 0;
            grpc_read_timeout 1h;
            grpc_send_timeout 1h;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_pass grpc://unix:/dev/shm/vlgrpc.sock;
        }

        location /tgrpc { # 修改为自己的服务名称 与xray配置里一致
            if ($request_method != "POST") {
                return 404;
            }
            client_body_buffer_size 1m;
            client_body_timeout 1h;
            client_max_body_size 0;
            grpc_read_timeout 1h;
            grpc_send_timeout 1h;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_pass grpc://unix:/dev/shm/tgrpc.sock;
        }
    }
}